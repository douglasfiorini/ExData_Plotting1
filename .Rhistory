sapply(iris$Sepal.Length, mean)
mean(iris$Sepal.Length, mean)
mean(iris$Sepal.Length)
iris[iris$Species == 'Virginica', ]
iris[iris$Species == 'virginica', ]
mean(iris[iris$Species == 'virginica', ])
mean(iris[iris$Species == 'virginica', ]$Species)
mean(iris[iris$Species == 'virginica', ]$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], c(1,2), mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl[, c(4,8)], mean)
tapply(mtcars$hp, mtcars$cyl[c(4,8)], mean)
tapply(mtcars$hp, mtcars$cyl, mean)
cylAvg <- tapply(mtcars$hp, mtcars$cyl, mean)
cylAvg$4
cylAvg[['4']]
abs(cylAvg[['4']] - cylAvg[['8']])
debug(ls)
ls
ls()
q()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
exit
1()
q()
exit()
quit()
;
name <- substitute(name)
if (!is.character(name))
name <- deparse(name)
warning(gettextf("%s converted to character string",
sQuote(name)), domain = NA)
pos <- name
}
all.names <- .Internal(ls(envir, all.names))
if (!missing(pattern)) {
if ((ll <- length(grep("[", pattern, fixed = TRUE))) &&
ll != length(grep("]", pattern, fixed = TRUE))) {
ll != length(grep("]", pattern, fixed = TRUE))) {
ll != length(grep("]", pattern, fixed = TRUE))) {
ll != length(grep("]", pattern, fixed = TRUE))) {
swirl()
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
objects.size(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, x = 10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:10, 20)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips = sample(c(0,1), 100, prob = c(0.3,0.7))
flips = sample(c(0,1), 100, prob = c(0.3,0.7), replace = TRUE)
flips = sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, prob = c(0.3,0.7), replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(1, n = 100, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
rnorm?
;
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, mean = 10)
rpois(5, 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
library(swirl)
rm(list=ls())
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
as.Date("1986-01-01")
d2 <- as.Date("1986-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXct(Sys.time())
t2 <- as.POSIXls(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
clas(t2)
class(t2)
t2
uncalss(t2)
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
weekdays(d1, t1)
weekdays(t1)
months(t1)
quarters(d1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
t3 <- "Outubro 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(httr)
?oauth_endpoints
oauth_endpoints("github")
myapp <- oauth_app("github", "e6471c1a52d2cf457fed", "c5efa47f69906714f6ad33809d19cf7a0b0b0da5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/rate_limit", gtoken)
req
class(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
content(req)
?content
json <- content(req)
class(json)
jsonresposta <- jsonlite::fromJSON(toJSON(json))
str(json)
library(jsonlite)
?fromJSON
toJSON(JSON)
toJSON(json)
jsonData <- fromJSON(json)
json
names(json)
jsonlite::fromJSON(toJSON(json))
jsonData <- jsonlite::fromJSON(toJSON(json))
names(jsonData)
str(jsonData)
class(jsonData)
jsonData[0]
jsonData[1]
jsonData[jsonData$owner]
jsonData$owner
jsonData$owner[1]
jsonData[jsonData$name == "datasharing" ]
names(jsonData[jsonData$name == "datasharing" ])
names(jsonData[jsonData$name == "datasharing",  ])
jsonData[jsonData$name == "datasharing",  ]$created_at
con <- url("http://biostat.jhsph.edu/~jleek/contact.html ")
htmlCode <- readlines(con)
readLines(con)
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[1,]
htmlCode[1]
htmlCode[c(10, 20, 30, 100)]
htmlCode[10]
htmlCode[30]
nchar(htmlCode[c(10, 20, 30, 100)])
read.fortran("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
read.fortran("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.fortran
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dataFile <- read.fortran(con)
dataFile <- read.fortran(con, c("A9"))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dataFile <- read.fortran(con, c("A9"))
?url
?read.swf
?read.fwf
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(file = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for "), skip = 4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
head(x)
x <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
tempFile <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = tempFile)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = tempFile, method = "curl")
x <- read.fwf(file = tempFile, skip = 4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
tempFile
x
head(x)
sum(x$V4)
tempFile <- tempfile()
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method = "curl")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method = "curl", destfile = tempFile)
dados <- read.csv(file = tempFile)
head(dados)
names(dados)
libray(dplyr)
library(dplyr)
filter(dados, ACR == 3 & AGS == 6)
agricultureLogical <- ifelse(dados$ACR == 3 & dados$AGS == 6)
agricultureLogical <- ifelse(dados$ACR == 3 & dados$AGS == 6, T, F)
agricultureLogical
agricultureLogical <- (dados$ACR == 3 & dados$AGS == 6)
agricultureLogical
agricultureLogical
dados[which(agricultureLogical)]
dados[which(agricultureLogical),]
head(dados[which(agricultureLogical),])
dados[which(agricultureLogical),]
head(dados[which(agricultureLogical),])
tempFile <- tempfile()
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = tempFile, method = "curl")
install.packages("jpeg")
library(jpeg)
?readJPEG
dados <- readJPEG(tempFile, native = T)
head(dados)
quantile(dados)
quantile(dados, c(0.3, 0.8))
15258512 - 638
-15258512 - 638
?quantile
loadCSVDataFrame <- function(url){ tempFile <- tempfile();  download.file(url=url, destfile = tempFile, method = "curl"); read.csv(file = tempFile) }
gdp <- loadCSVDataFrame(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv )
gdp <- loadCSVDataFrame("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
head(gdp)
gdp
str(gdp)
edudata <- loadCSVDataFrame("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
str(edudata)
intersect(gdp$X, edudata$CountryCode)
nrow(intersect(gdp$X, edudata$CountryCode))
summary(intersect(gdp$X, edudata$CountryCode))
names(edudata)
summary(unique(intersect(gdp$X, edudata$CountryCode)))
names(edudata)
names(gdp)
gdp$X
?intersect
gdp$X %in% edudata$CountryCode
gdp[gdp$X %in% edudata$CountryCode,]
count(gdp[gdp$X %in% edudata$CountryCode,])
gdp$X %in% edudata$CountryCode
edudata$CountryCode %in% gdp$X
count(edudata$CountryCode %in% gdp$X)
count(edudata$CountryCode %in% gdp$X)
edudata[edudata$CountryCode %in% gdp$X,]
names(gdp)
summary(gdp)
gdp[order(gdp$Gross.domestic.product.2012),]
head(gdp[order(gdp$Gross.domestic.product.2012),])
head(gdp[order(gdp$Gross.domestic.product.2012, decreasing = TRUE),])
head(gdp)
loadCSVDataFrame <- function(url,...){ tempFile <- tempfile();  download.file(url=url, destfile = tempFile, method = "curl"); read.csv(file = tempFile, ...) }
?read.csv
gdp <- loadCSVDataFrame("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip=3)
head(gdp)
gdp[order(gdp$Ranking, decreasing = T),]
head(gdp[order(gdp$Ranking, decreasing = T),])
gdp <- loadCSVDataFrame("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip=3, nrows=192)
head(gdp[order(gdp$Ranking, decreasing = T),])
head(gdp[order(gdp$Ranking, decreasing = T),], x = 13)
head(gdp[order(gdp$Ranking, decreasing = T),], n = 13)
names(gdp)
names(edudata)
dataMerged <- merge(gdp, edudata, by.x="X", by.y="CountryCode" )
head(dataMerged)
names(dataMerged)
nrow(dataMerged)
head(gdp[order(dataMerged$Ranking, decreasing = T),], n = 13)
head(dataMerged[order(dataMerged$Ranking, decreasing = T),], n = 13)
summary(dataMerged)
?xtab
?xtabs
?summarise
summarise(group_by(Income.Group), mean(Ranking))
summarise(dataMerged, group_by(Income.Group), mean(Ranking))
summarise(dataMerged,  mean(Ranking))
summarise(group_by(dataMerged, Income.Group), mean(Ranking))
group_by(dataMerged, Income.Group)
?quantile
quantile(dataMerged$Ranking, c(0.2,0.4,0.6,0.8,1))
names(dataMerged)
select(dataMerged, X, Short.Name Income.Group, Ranking)
dataMSelected <- select(dataMerged, X, Short.Name, Income.Group, Ranking)
head(dataMSelected)
quantile(dataMerged$Ranking, c(0.2,0.4,0.6,0.8,1))
quantile(dataMSelected$Ranking, c(0.2,0.4,0.6,0.8,1))
?ddply
?cut
install.packages("Hmisc")
library(Hmisc)
cut2(dataMSelected$Ranking, g = 5)
dataMSelected$qGroup <- cut2(dataMSelected$Ranking, g = 5)
head(dataMerged)
head(dataMSelected)
?table
table(dataMSelected$Income.Group, dataMSelected$qGroup)
table(dataMSelected$qGroup, dataMSelected$Income.Group)
library(swirl)
swirl()
library(IPSUR)
read(IPSUR)
hist(precip, main = "")
head(precip)
precip
table(precip)
hist(precip, freq = FALSE, main = "")
hist(precip, breaks = 10, main = "")
hist(precip, main = "")
hist(precip, breaks = 10, main = "")
hist(precip, breaks = 200, main = "")
hist(precip, breaks = 10, main = "")
hist(precip, main = "")
plot(LakeHuron, type = "h")
plot(LakeHuron, type = "p")
plot(LakeHuron, type = "h")
plot(LakeHuron, type = "p")
str(state.region)
state.region[1]
state.region[1:4]
state.division
table(state.division)
sum(table(state.division))
table(state.division)/sum(table(state.division))
sum(table(state.division)/sum(table(state.division)))
table(state.division)/sum(table(state.division))
prop.table(table(state.division))
state.region
table(state.region)
tbl = table(state.region)
barb
barplot(table(tbl), cex.names = 0.5)
barplot(tbl, cex.names = 0.5)
barplot(table.prop(tbl), cex.names = 0.5)
barplot(prop.table(tbl), cex.names = 0.5)
library(qcc)
pareto.chart(table(state.division), ylab = "Frequency")
summary(state.division)
table(state.division)
summary(table(state.division)
)
x <- table(state.region)
x
as.vector(x)
dotchart(as.vector(x), labels = names(x))
library(IPSUR)
read(IPSUR)
library(aplpack)
stem.leaf(faithful$eruptions)
?stem.leaf
faithful$eruptions
table(faithful$eruptions)
summary(faithful$eruptions)
length(faithful$eruptions)
?var
library(e1071)
skewness(discoveries)
discoveries
hist(discoveries)
2 * sqrt(6/length(discoveries))
stem.leaf(discoveries)
library(lattice)
?xyplot
?subset
subset(airquality, Temp > 80)
airquality
setwd("~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1")
data = read.csv(file = '../household_power_consumption.txt', sep = ';', na.strings = '?', stringsAsFactors = F)
data = data[data$Date %in% c('1/2/2007', '2/2/2007'),]
data$DateTime = strptime(paste(data$Date, data$Time), format="%d/%m/%Y %H:%M:%S")
hist(data$Global_active_power, col='red', xlab = 'Global Active Power (kilowatts)', main = 'Global Active Power')
with(data, plot(x = DateTime, y = Global_active_power ))
?plot
with(data, plot(x = DateTime, y = Global_active_power, type = 'l' ))
with(data, plot(x = DateTime, y = Global_active_power, type = 'l', ylab = 'Global Active Power(kilowatts)' ))
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot2.R')
with(data, plot(x = DateTime, y = Global_active_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
?lowes
?lowess
?plot
names(data)
with(data, plot(x = DateTime, y = Global_active_power + Global_reactive_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
with(data, plot(x = DateTime, y = Global_active_power ~ Global_reactive_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
with(data, plot(x = DateTime, y = Global_reactive_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
with(data, plot(x = DateTime, y = Global_active_power + Global_reactive_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
with(data, plot(x = DateTime, y = Sub_metering_1, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ))
table(rpois(100, 5))
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
?data.frame
data.frame(Sub_Metering1 = data$Sub_metering_1, Sub_Metering2 = data$Sub_metering_2, Sub_Metering3 = data$Sub_metering_3)
sub = data.frame(Sub_Metering1 = data$Sub_metering_1, Sub_Metering2 = data$Sub_metering_2, Sub_Metering3 = data$Sub_metering_3)
plot(sub, type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
plot(sub, type = c("h", "h", "h"), col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
plot(sub)
plot()
plot(0)
?lines
with(data, { plot(x = DateTime, y = Global_active_power, type = 'l', ylab = 'Global Active Power(kilowatts)', xlab = '' ) })
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot3.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
names(data)
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
tempFile
tempFile()
tempFile
tempFile
tempFile
tempFile
tempfile
tempfile()
tempfile()
tempfile()
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/util.R')
downloadProject1File()
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
dev.off()
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
?dev.copy
dev.cur
dev.cur()
dev.off()
dev.off()
dev.prev()
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
?par
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
source('~/DESENV/repositorio/rspecialization/exploratory_data_analysis/Project 1/ExData_Plotting1/plot4.R')
